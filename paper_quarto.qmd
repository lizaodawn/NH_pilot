---
engine: knitr
title: "Keyword and Collocation analysis on India-related text of Natural History"
author: "Lizao Zhuang (Dawn) r0914937"
format: 
  html:
    theme: journal
    toc: true
    code-link: true
    abstract-title: "Abstract"
number-sections: true
code-fold: true
abstract: 'The paper applies the methodology of keyword analysis and collocation analysis in corpus linguistics to explore the possible topics of the text related to "India" in Natural History of Pliny the Elder.'
---

```{r setup, include=FALSE}
library('tidyverse')
library('mclm')
library('here')
library('kableExtra')
library('dplyr')
library('ggplot2')
library('leaflet')
options(digits = 3)
```

# Research Question

Natural History by Pliny the Elder is considered the very first encyclopedia in modern history. It not only showcased the actual merchant exchange of the Roman Empire, but also manifested the spatial imagination of Pliny the Elder and the referenced scholarships of that time.

The text of the whole book has been digitized and annotated with people's name and places' name and coordinates by [TOPOSText](https://topostext.org/the-project) project since 2012. By scraping the text as well as the geographical related annotations, the distribution of place names in the encyclopedia can be investigated, which will contribute to a comprehensive understanding of the spatial imagination of Pliny the Elder and the scholarships in his reference network.

@fig-geoname shows the Top 20 distinct geographical names mentioned in Natural History.

```{r}
#| label: fig-geoname
#| fig-cap: Bar Chart for Top 20 Distinct Place Names Mentioned in Natural History
#| warning: false
#| echo: false


data <- read.csv("geotext_whole.csv")

summary_data <- data %>%
  group_by(ToposText_ID, Place_Name, Lat, Long) %>%
  summarise(Count = n()) %>%
  arrange(desc(Count)) %>%
  ungroup()

top_20_summary_data <- summary_data %>%
  top_n(20, Count) %>%
  ungroup()

ggplot(top_20_summary_data, aes(x = reorder(Place_Name, -Count), y = Count)) +
  geom_bar(stat = "identity") +
  labs(x = "Place Name", y = "Count") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

When mapping the places with the annotated coordinates, as shown in @fig-map, India is the only one place that not in mediterranean region while having a rather high counts in the mentioned times.

```{r}
#| label: fig-map
#| fig-cap: Mapping of geographical names mentioned in Natural History
#| warning: false
#| echo: false

m <- leaflet() %>%
  addTiles() %>%
  addCircleMarkers(
    data = top_20_summary_data,
    lat = ~Lat,
    lng = ~Long,
    radius = sqrt(top_20_summary_data$Count) * 0.8,  
    color = "blue",
    fill = TRUE,
    fillOpacity = 0.6,
    popup = paste("Place Name:", top_20_summary_data$Place_Name, "<br>",
                  "Count:", top_20_summary_data$Count)
  ) 

m

```

In this regards, this paper tries to further explore what themes are referred around the text about India region with application of keyword analysis and collocation analysis methods in corpus linguistics.

# Corpus Description

As mentioned, the digitized text with geographical annotation is available through [TOPOSText](https://topostext.org/work/148 "Check Natural History on ToposText") project, I further scraped the full text and exported them in .txt as a **reference corpus**, and also exported those with annotation of coordinates in a range of Indian subcontinent as geographically related texts to India as a **target corpus**. The scraping code can be accessed in the link.

```{r}
#| label: prepare-corpus
#| warning: false

refcorpus_folder <- here("NH_wholetext")
fnames_wholetext <- get_fnames(refcorpus_folder) %>% 
  keep_re("[.]txt")


tarcorpus_folder <-  here("NH_geotext_india")
fnames_indiatext <- get_fnames(tarcorpus_folder) %>% 
  keep_re("[.]txt")

ref_flist <- freqlist(fnames_wholetext, re_token_splitter = re("\\s+"))
tar_flist <- freqlist(fnames_indiatext, re_token_splitter = re("\\s+"))
```

The **reference corpus** consists of all texts in the encyclopedia, divided by paragraphs, has `r prettyNum(n_tokens(ref_flist))` tokens and `r n_types(ref_flist)` types, with the type-token ratio of `r round(n_types(ref_flist)/n_tokens(ref_flist), 2)`.

And the **target corpus** consists of all text related to Indian subcontinent (with coordinates in range of *8째4'N-37째6'N and 68째7'E to 97째25'E*) , has `r prettyNum(n_tokens(tar_flist))` tokens and `r n_types(tar_flist)` types, with the type-token ratio of `r round(n_types(tar_flist)/n_tokens(tar_flist), 2)`.

The tokens are separated by white space and in the analysis of this paper, all the punctuation marks are removed.

# Keyword Analysis on India-related texts

```{r}
#| label: keyword
#| warning: false


# build frequency list for target corpus
flist_target <- fnames_indiatext %>%
  freqlist(
    re_token_splitter = r"--[(?xi)    \s+   ]--", # whitespace as token splitter
    re_token_transf_in = "[[:punct:]]", # Match punctuation marks
    token_transf_out = "" # Replace punctuation marks with an empty string
  )

# build frequency list for reference corpus
flist_ref <- fnames_wholetext %>%
  freqlist(re_token_splitter = r"--[(?xi)    \s+   ]--", # whitespace as token splitter
           re_token_transf_in = "[[:punct:]]", # Match punctuation marks
           token_transf_out = "") 

# calculate scores
scores_kw <- assoc_scores(flist_target, flist_ref)

top_scores_kw <- scores_kw %>% 
  filter(PMI >= 2 & G_signed >= 2)

```

@tbl-kwtable_PMI and @tbl-kwtable_Gsigned shows the top 30 keywords in Indian related texts comparing to other context, respectively sorted by PMI and G_signed.

::: panel-tabset
## Sorted by PMI

```{r}
#| warning: false
#| echo: false
#| label: tbl-kwtable_PMI
#| tbl-cap-location: top
#| tbl-cap: Top 30 Keywords on Indian Related Text in Natural History (sorted by PMI)

top_scores_kw %>% # also valid for top_scores_colloc
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(PMI)) %>%             # sort by PMI (descending) 
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", r"(Signed $G^2$)"))%>% 
  kable_minimal() %>% 
  scroll_box(height = "400px")
```

## Sorted by G_signed

```{r}
#| warning: false
#| echo: false
#| label: tbl-kwtable_Gsigned
#| tbl-cap-location: top
#| tbl-cap: Top 30 Keywords on Indian Related Text in Natural History (sorted by G_Signed)

top_scores_kw %>% # also valid for top_scores_colloc
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(G_signed)) %>%             # sort by PMI (descending) 
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", r"(Signed $G^2$)")) %>% 
  kable_minimal() %>% 
  scroll_box(height = "400px")
```
:::

```{r}
#| label: tbl-kwtables1
#| tbl-cap: Top 30 Keywords of Indian related texts in Natural History
#| tbl-subcap: 
#|  - "Sorted by PMI"
#|  - "Sorted by G_signed"
#| layout-ncol: 2
#| warning: false
#| echo: false
#| output: false



top_scores_kw %>% # also valid for top_scores_colloc
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(PMI)) %>%             # sort by PMI (descending) 
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", "r (Signed $G^{2}$)"))

top_scores_kw %>% # also valid for top_scores_colloc
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(G_signed)) %>%             # sort by PMI (descending) 
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", "r (Signed $G^{2}$)")) 



```

# Collocation Analysis on "India" in the whole corpus

```{r}
#| label: collocation
#| warning: false

coocs <- fnames_wholetext %>% 
  surf_cooc("(?xi)  ^ india $", 
            re_token_splitter = r"--[(?xi)    \s+   ]--", # whitespace as token splitter
            re_token_transf_in = "[[:punct:]]", # Match punctuation marks
            token_transf_out = "")

# calculate scores
scores_colloc <- assoc_scores(coocs)

top_scores_colloc <- scores_colloc %>% 
  filter(PMI >= 2 & G_signed >= 2)
```

@tbl-coltable_PMI and @tbl-coltable_Gsigned shows the top 30 collocates to the word "india" in the whole text, respectively sorted by PMI and G_signed.

::: panel-tabset
## Sorted by PMI

```{r}
#| label: tbl-coltable_PMI
#| tbl-cap-location: top
#| tbl-cap: Top 30 Keywords on Indian Related Text in Natural History (sorted by PMI)
#| warning: false
#| echo: false
top_scores_colloc %>% 
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(PMI)) %>%        # sort by G_signed (descending)  
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", "Signed G^2^"))%>%
  kable_minimal() %>% 
  scroll_box(height = "400px")

```

## Sorted by G_signed

```{r}
#| label: tbl-coltable_Gsigned
#| tbl-cap-location: top
#| tbl-cap: Top 30 Keywords on Indian Related Text in Natural History (sorted by G_signed)
#| warning: false
#| echo: false

top_scores_colloc %>% 
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(G_signed)) %>%        # sort by G_signed (descending)  
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", "`r (Signed G^2^)`"))%>% 
  kable_minimal() %>% 
  scroll_box(height = "400px") 

```
:::

```{r}
#| label: tbl-coltables1
#| tbl-cap: Top 30 Collocates of word "India" in Natural History
#| tbl-subcap: 
#|  - "Sorted by PMI"
#|  - "Sorted by G_signed"
#| layout-ncol: 2
#| warning: false
#| echo: false
#| output: false



top_scores_colloc %>% 
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(PMI)) %>%        # sort by G_signed (descending)  
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", "(Signed $G^{2}$)")) 

top_scores_colloc %>% 
  as_tibble() %>%
  select(type, a, PMI, G_signed) %>% # select 4 columns
  arrange(desc(G_signed)) %>%        # sort by G_signed (descending)  
  head(30) %>%                       # select top 30 rows
  kbl(col.names = c("Type", "Frequency", "PMI", "(Signed $G^{2}$)")) 


```

# Conclusion

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.
